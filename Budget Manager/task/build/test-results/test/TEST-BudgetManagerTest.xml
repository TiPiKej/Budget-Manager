<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BudgetManagerTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2020-08-16T19:55:20" hostname="WIN10" time="0.19">
  <properties/>
  <testcase name="start" classname="BudgetManagerTest" time="0.19">
    <failure message="java.lang.AssertionError: Wrong answer in test #7&#10;&#10;Your program sort by type wrong!&#10;Expected:&#10;Food - $90.71&#10;Entertainment - $48.83&#10;Clothes - $41.58&#10;Other - $33.24&#10;Your output:&#10;Types:&#10;Food - $8.00&#10;Entertainment - $6.00&#10;Clothes - $9.00&#10;Other - $12.00&#10;Total sum: $214.36&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;Choose your action:&#10;1) Add income&#10;2) Add purchase&#10;3) Show list of purchases&#10;4) Balance&#10;5) Save&#10;6) Load&#10;7) Analyze (Sort)&#10;0) Exit&#10;&gt; 7&#10;&#10;How do you want to sort?&#10;1) Sort all purchases&#10;2) Sort by type&#10;3) Sort certain type&#10;4) Back&#10;&gt; 1&#10;&#10;Purchase list is empty!&#10;&#10;How do you want to sort?&#10;1) Sort all purchases&#10;2) Sort by type&#10;3) Sort certain type&#10;4) Back&#10;&gt; 2&#10;&#10;Types:&#10;Food - $0&#10;Entertainment - $0&#10;Clothes - $0&#10;Other - $0&#10;Total sum: $0&#10;&#10;How do you want to sort?&#10;1) Sort all purchases&#10;2) Sort by type&#10;3) Sort certain type&#10;4) Back&#10;&gt; 3&#10;&#10;&#10;Choose the type of purchase&#10;1) Food&#10;2) Clothes&#10;3) Entertainment&#10;4) Other&#10;5) Back&#10;&gt; 4&#10;&#10;Purchase list is empty!&#10;&#10;How do you want to sort?&#10;1) Sort all purchases&#10;2) Sort by type&#10;3) Sort certain type&#10;4) Back&#10;&gt; 4&#10;&#10;&#10;Choose your action:&#10;1) Add income&#10;2) Add purchase&#10;3) Show list of purchases&#10;4) Balance&#10;5) Save&#10;6) Load&#10;7) Analyze (Sort)&#10;0) Exit&#10;&gt; 6&#10;&#10;Purchases were loaded!&#10;&#10;Choose your action:&#10;1) Add income&#10;2) Add purchase&#10;3) Show list of purchases&#10;4) Balance&#10;5) Save&#10;6) Load&#10;7) Analyze (Sort)&#10;0) Exit&#10;&gt; 7&#10;&#10;How do you want to sort?&#10;1) Sort all purchases&#10;2) Sort by type&#10;3) Sort certain type&#10;4) Back&#10;&gt; 1&#10;&#10;All:&#10;Almond 250g $35.43&#10;Skate rental $30.00&#10;FIJI Natural Artesian Water $25.98&#10;Wrangler Men's Stretch Cargo Pant $19.97&#10;Sensodyne Pronamel Toothpaste $19.74&#10;Men's Dual Defense Crew Socks 12 Pairs $13.00&#10;LEGO DUPLO Town Farm Animals $10.10&#10;Chick-fil-A $10 Gift Card $10.00&#10;Cinema $8.73&#10;Gildan LT $8.61&#10;Hershey's milk chocolate bars $8.54&#10;Keystone Ground Bee $6.28&#10;Red Fuji Apple $5.99&#10;Eggs $3.99&#10;Milk $3.50&#10;Debt $3.50&#10;Great Value Broccoli Florets $1.00&#10;Total: $214.36&#10;&#10;How do you want to sort?&#10;1) Sort all purchases&#10;2) Sort by type&#10;3) Sort certain type&#10;4) Back&#10;&gt; 2&#10;&#10;Types:&#10;Food - $8.00&#10;Entertainment - $6.00&#10;Clothes - $9.00&#10;Other - $12.00&#10;Total sum: $214.36&#10;&#10;How do you want to sort?&#10;1) Sort all purchases&#10;2) Sort by type&#10;3) Sort certain type&#10;4) Back&#10;&gt; 3&#10;&#10;&#10;Choose the type of purchase&#10;1) Food&#10;2) Clothes&#10;3) Entertainment&#10;4) Other&#10;5) Back&#10;&gt; 1&#10;&#10;Food:&#10;Almond 250g $35.43&#10;FIJI Natural Artesian Water $25.98&#10;Hershey's milk chocolate bars $8.54&#10;Keystone Ground Bee $6.28&#10;Red Fuji Apple $5.99&#10;Eggs $3.99&#10;Milk $3.50&#10;Great Value Broccoli Florets $1.00&#10;Total: $90.71&#10;&#10;How do you want to sort?&#10;1) Sort all purchases&#10;2) Sort by type&#10;3) Sort certain type&#10;4) Back&#10;&gt; 4&#10;&#10;&#10;Choose your action:&#10;1) Add income&#10;2) Add purchase&#10;3) Show list of purchases&#10;4) Balance&#10;5) Save&#10;6) Load&#10;7) Analyze (Sort)&#10;0) Exit&#10;&gt; 0&#10;&#10;&#10;Bye!" type="java.lang.AssertionError">java.lang.AssertionError: Wrong answer in test #7

Your program sort by type wrong!
Expected:
Food - $90.71
Entertainment - $48.83
Clothes - $41.58
Other - $33.24
Your output:
Types:
Food - $8.00
Entertainment - $6.00
Clothes - $9.00
Other - $12.00
Total sum: $214.36

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
&gt; 7

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
&gt; 1

Purchase list is empty!

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
&gt; 2

Types:
Food - $0
Entertainment - $0
Clothes - $0
Other - $0
Total sum: $0

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
&gt; 3


Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
&gt; 4

Purchase list is empty!

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
&gt; 4


Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
&gt; 6

Purchases were loaded!

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
&gt; 7

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
&gt; 1

All:
Almond 250g $35.43
Skate rental $30.00
FIJI Natural Artesian Water $25.98
Wrangler Men's Stretch Cargo Pant $19.97
Sensodyne Pronamel Toothpaste $19.74
Men's Dual Defense Crew Socks 12 Pairs $13.00
LEGO DUPLO Town Farm Animals $10.10
Chick-fil-A $10 Gift Card $10.00
Cinema $8.73
Gildan LT $8.61
Hershey's milk chocolate bars $8.54
Keystone Ground Bee $6.28
Red Fuji Apple $5.99
Eggs $3.99
Milk $3.50
Debt $3.50
Great Value Broccoli Florets $1.00
Total: $214.36

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
&gt; 2

Types:
Food - $8.00
Entertainment - $6.00
Clothes - $9.00
Other - $12.00
Total sum: $214.36

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
&gt; 3


Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
&gt; 1

Food:
Almond 250g $35.43
FIJI Natural Artesian Water $25.98
Hershey's milk chocolate bars $8.54
Keystone Ground Bee $6.28
Red Fuji Apple $5.99
Eggs $3.99
Milk $3.50
Great Value Broccoli Florets $1.00
Total: $90.71

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
&gt; 4


Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
&gt; 0


Bye!
	at org.junit.Assert.fail(Assert.java:88)
	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 0


Bye!
?[1;31m
Start test 2?[0m
Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 0


Bye!
?[1;31m
Start test 3?[0m
Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 4

Balance: $0.00

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 0


Bye!
?[1;31m
Start test 4?[0m
Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 1

Enter income:
> 400
Income was added!

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 4

Balance: $400.00

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 1

Enter income:
> 200
Income was added!

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 4

Balance: $600.00

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 0


Bye!
?[1;31m
Start test 5?[0m
Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 1

Enter income:
> 1000
Income was added!

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 2


Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 1

Enter purchase name:
> Almond 250g
Enter its price:
> 35.43
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 1

Enter purchase name:
> Milk
Enter its price:
> 3.50
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 1

Enter purchase name:
> Red Fuji Apple
Enter its price:
> 5.99
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 1

Enter purchase name:
> Eggs
Enter its price:
> 3.99
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 1

Enter purchase name:
> FIJI Natural Artesian Water
Enter its price:
> 25.98
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 1

Enter purchase name:
> Hershey's milk chocolate bars
Enter its price:
> 8.54
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 1

Enter purchase name:
> Great Value Broccoli Florets
Enter its price:
> 1.00
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 1

Enter purchase name:
> Keystone Ground Bee
Enter its price:
> 6.28
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 2

Enter purchase name:
> Gildan LT
Enter its price:
> 8.61
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 2

Enter purchase name:
> Men's Dual Defense Crew Socks 12 Pairs
Enter its price:
> 13.00
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 2

Enter purchase name:
> Wrangler Men's Stretch Cargo Pant
Enter its price:
> 19.97
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 3

Enter purchase name:
> LEGO DUPLO Town Farm Animals
Enter its price:
> 10.10
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 3

Enter purchase name:
> Cinema
Enter its price:
> 8.73
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 3

Enter purchase name:
> Skate rental
Enter its price:
> 30
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 4

Enter purchase name:
> Sensodyne Pronamel Toothpaste
Enter its price:
> 19.74
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 4

Enter purchase name:
> Chick-fil-A $10 Gift Card
Enter its price:
> 10
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 4

Enter purchase name:
> Debt
Enter its price:
> 3.50
Purchase was added!

Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 5


Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 5

Purchases were saved!

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 0


Bye!
?[1;31m
Start test 6?[0m
Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 6

Purchases were loaded!

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 4

Balance: $785.64

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 3


Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) All
6) Back
> 5

All:
Almond 250g $35.43
Milk $3.50
Red Fuji Apple $5.99
Eggs $3.99
FIJI Natural Artesian Water $25.98
Hershey's milk chocolate bars $8.54
Great Value Broccoli Florets $1.00
Keystone Ground Bee $6.28
Gildan LT $8.61
Men's Dual Defense Crew Socks 12 Pairs $13.00
Wrangler Men's Stretch Cargo Pant $19.97
LEGO DUPLO Town Farm Animals $10.10
Cinema $8.73
Skate rental $30.00
Sensodyne Pronamel Toothpaste $19.74
Chick-fil-A $10 Gift Card $10.00
Debt $3.50
Total sum: $214.36


Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) All
6) Back
> 1

Food:
Almond 250g $35.43
Milk $3.50
Red Fuji Apple $5.99
Eggs $3.99
FIJI Natural Artesian Water $25.98
Hershey's milk chocolate bars $8.54
Great Value Broccoli Florets $1.00
Keystone Ground Bee $6.28
Total sum: $90.71


Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) All
6) Back
> 6


Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 0


Bye!
?[1;31m
Start test 7?[0m
Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 7

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
> 1

Purchase list is empty!

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
> 2

Types:
Food - $0
Entertainment - $0
Clothes - $0
Other - $0
Total sum: $0

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
> 3


Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 4

Purchase list is empty!

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
> 4


Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 6

Purchases were loaded!

Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 7

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
> 1

All:
Almond 250g $35.43
Skate rental $30.00
FIJI Natural Artesian Water $25.98
Wrangler Men's Stretch Cargo Pant $19.97
Sensodyne Pronamel Toothpaste $19.74
Men's Dual Defense Crew Socks 12 Pairs $13.00
LEGO DUPLO Town Farm Animals $10.10
Chick-fil-A $10 Gift Card $10.00
Cinema $8.73
Gildan LT $8.61
Hershey's milk chocolate bars $8.54
Keystone Ground Bee $6.28
Red Fuji Apple $5.99
Eggs $3.99
Milk $3.50
Debt $3.50
Great Value Broccoli Florets $1.00
Total: $214.36

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
> 2

Types:
Food - $8.00
Entertainment - $6.00
Clothes - $9.00
Other - $12.00
Total sum: $214.36

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
> 3


Choose the type of purchase
1) Food
2) Clothes
3) Entertainment
4) Other
5) Back
> 1

Food:
Almond 250g $35.43
FIJI Natural Artesian Water $25.98
Hershey's milk chocolate bars $8.54
Keystone Ground Bee $6.28
Red Fuji Apple $5.99
Eggs $3.99
Milk $3.50
Great Value Broccoli Florets $1.00
Total: $90.71

How do you want to sort?
1) Sort all purchases
2) Sort by type
3) Sort certain type
4) Back
> 4


Choose your action:
1) Add income
2) Add purchase
3) Show list of purchases
4) Balance
5) Save
6) Load
7) Analyze (Sort)
0) Exit
> 0


Bye!
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
